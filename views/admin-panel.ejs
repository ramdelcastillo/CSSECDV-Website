<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel</title>
</head>
<style>
    .modal {
        background-color: rgba(0, 0, 0, 0.3);
    }

    .input-field {
        background-color: #1f2937;
        /* Dark gray */
        border: 1px solid #4b5563;
        /* Gray border */
        color: white;
        padding: 0.625rem;
        border-radius: 0.375rem;
        width: 100%;
        outline: none;
        transition: border-color 0.2s, background-color 0.2s, box-shadow 0.2s;
    }

    .input-field:focus {
        border-color: #10b981;
        /* Green border */
        background-color: #374151;
        /* Lighter gray */
        box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.3);
        /* Green glow */
    }

    .modal-content {
        max-width: 400px;
    }

    .btn {
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: background-color 0.2s;
    }

    .btn:hover {
        filter: brightness(1.2);
    }
</style>

<body class="bg-gray-900 text-white">
    <%- include('partials/navbar-admin-panel', { page: 'admin-panel' }) %>
        <div class="container mx-auto mt-10">
            <h1 class="text-3xl font-bold mb-6">User Management</h1>

            <button onclick="openAddUserModal()" id="addUserBtn" class="mb-4 px-4 py-2 bg-green-500 text-white rounded">
                Add User
            </button>

            <table class="w-full bg-gray-800 text-left border-collapse">
                <thead>
                    <tr class="bg-gray-700">
                        <th class="p-3">ID</th>
                        <th class="p-3">Email</th>
                        <th class="p-3">Username</th>
                        <th class="p-3">Full Name</th>
                        <th class="p-3">Phone</th>
                        <th class="p-3">Created At</th>
                        <th class="p-3">Ban Posting</th>
                        <th class="p-3">Ban Commenting</th>
                        <th class="p-3">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% users.forEach(user=> { %>
                        <tr class="border-t border-gray-600">
                            <td class="p-3">
                                <%= user.id %>
                            </td>
                            <td class="p-3">
                                <%= user.email %>
                            </td>
                            <td class="p-3">
                                <%= user.username %>
                            </td>
                            <td class="p-3">
                                <%= user.full_name %>
                            </td>
                            <td class="p-3">
                                <%= user.phone_number %>
                            </td>
                            <td class="p-3">
                                <%= new Date(user.created_at).toLocaleString() %>
                            </td>

                            <td class="p-3">
                                <select id="ban_posting_<%= user.id %>"
                                    class="bg-gray-700 text-white p-1 rounded ban-posting" data-user-id="<%= user.id %>"
                                    data-username="<%= user.username %>"> <!-- Added this -->
                                    <option value="false" <%=user.ban_posting ? '' : 'selected' %>>No</option>
                                    <option value="true" <%=user.ban_posting ? 'selected' : '' %>>Yes</option>
                                </select>
                            </td>

                            <td class="p-3">
                                <select id="ban_commenting_<%= user.id %>"
                                    class="bg-gray-700 text-white p-1 rounded ban-commenting"
                                    data-user-id="<%= user.id %>" data-username="<%= user.username %>">
                                    <!-- Added this -->
                                    <option value="false" <%=user.ban_commenting ? '' : 'selected' %>>No</option>
                                    <option value="true" <%=user.ban_commenting ? 'selected' : '' %>>Yes</option>
                                </select>
                            </td>



                            <td class="p-3">
                                <button
                                    onclick="openEditUserModal('<%= user.email %>', '<%= user.username %>', '<%= user.full_name %>', '<%= user.phone_number %>')"
                                    class="bg-yellow-500 px-3 py-1 rounded text-black">
                                    Edit
                                </button>

                                <button onclick="openDeleteUserModal('<%= user.username %>')"
                                    class="bg-red-600 px-3 py-1 rounded text-white delete-user"
                                    data-user-id="<%= user.id %>">
                                    Delete
                                </button>
                            </td>
                        </tr>
                        <% }) %>
                </tbody>
            </table>

            <button onclick="openBanUserModal()" id="saveChanges" class="mt-6 px-4 py-2 bg-blue-500 text-white rounded">
                Save Changes
            </button>
        </div>

        <div id="addUserModal"
            class="modal fixed inset-0 bg-transparent flex items-center justify-center transition-opacity duration-300"
            style="display: none;">
            <div
                class="modal-content bg-gray-900 p-6 rounded-xl shadow-2xl w-96 transform transition-transform scale-95">
                <h2 class="text-2xl font-bold text-white mb-4">Add User</h2>
                <form id="addUserForm" action="/admin-panel/add-user" method="POST" enctype="multipart/form-data">
                    <div class="flex space-x-3 mb-4">
                        <div class="w-1/2">
                            <label class="block text-gray-300 mb-1">First Name</label>
                            <input type="text" id="first_name" name="first_name" class="input-field">
                        </div>
                        <div class="w-1/2">
                            <label class="block text-gray-300 mb-1">Last Name</label>
                            <input type="text" id="last_name" name="last_name" class="input-field">
                        </div>
                    </div>

                    <label class="block text-gray-300 mb-1">Email</label>
                    <input type="email" id="email" name="email" class="input-field mb-4">

                    <label class="block text-gray-300 mb-1">Username</label>
                    <input type="text" id="username" name="username" class="input-field mb-4">

                    <label class="block text-gray-300 mb-1">Phone Number</label>
                    <input type="tel" id="phone" name="phone" class="input-field mb-4" placeholder="09*********">

                    <label class="block text-gray-300 mb-1">Profile Photo (.png or .jpg only)</label>
                    <input type="file" id="profile_image" name="profile_image" class="input-field mb-4"
                        accept="image/*">

                    <label class="block text-gray-300 mb-1">Password</label>
                    <input type="password" id="password" name="password" class="input-field mb-4">

                    <label class="block text-gray-300 mb-1">Retype Password</label>
                    <input type="password" id="confirm_password" name="confirm_password" class="input-field mb-4">

                    <div class="flex justify-end space-x-2">
                        <button type="button" onclick="closeAddUserModal()"
                            class="btn bg-gray-600 hover:bg-gray-700">Cancel</button>
                        <button type="button" id="confirmAddUser" class="btn bg-green-500 hover:bg-green-600">Add
                            User</button>
                    </div>
                </form>
            </div>
        </div>


        <!-- Edit User Modal -->
        <div id="editUserModal"
            class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center transition-opacity duration-300"
            style="display: none;">
            <div
                class="modal-content bg-gray-900 p-6 rounded-xl shadow-2xl w-96 transform transition-transform scale-95">
                <h2 class="text-2xl font-bold text-white mb-4">Edit User</h2>
                <form id="editUserForm" action="/admin-panel/edit-user" method="POST" enctype="multipart/form-data">
                    <input type="hidden" id="edit_user_id">

                    <label class="block text-gray-300 mb-1">Email</label>
                    <input type="email" id="edit_email" name="email" class="input-field mb-4">

                    <label class="block text-gray-300 mb-1">Username</label>
                    <input type="text" id="edit_username" name="username" class="input-field mb-4">

                    <label class="block text-gray-300 mb-1">Full Name</label>
                    <input type="text" id="edit_full_name" name="full_name" class="input-field mb-4">

                    <label class="block text-gray-300 mb-1">Phone Number</label>
                    <input type="tel" id="edit_phone" name="phone" class="input-field mb-4">

                    <div class="flex justify-end space-x-2">
                        <button type="button" onclick="closeEditUserModal()"
                            class="btn bg-gray-600 hover:bg-gray-700">Cancel</button>
                        <button type="button" onclick="saveEditedUser()" id="confirmEditUser"
                            class="btn bg-green-500 hover:bg-green-600">
                            Save Changes
                        </button>

                    </div>
                </form>
            </div>
        </div>


        <!-- Confirm Add User Modal -->
        <div id="confirmAddUserModal"
            class="modal hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
            <div class="modal-content bg-gray-900 p-6 rounded-xl shadow-2xl w-96">
                <h2 class="text-xl text-white font-semibold">Confirm Add User</h2>
                <p class="text-gray-300">Are you sure you want to add this user?</p>
                <div class="flex justify-end gap-2 mt-4">
                    <button id="confirmAddUsers" class="px-4 py-2 bg-green-500 text-white rounded">Yes</button>
                    <button onclick="closeAddUserModal()" class="px-4 py-2 bg-gray-500 text-white rounded">No</button>
                </div>
            </div>
        </div>

        <!-- Confirm Delete User Modal -->
        <div id="confirmDeleteUserModal"
            class="modal hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
            <div class="modal-content bg-gray-900 p-6 rounded-xl shadow-2xl w-96">
                <h2 class="text-xl text-white font-semibold">Confirm Delete</h2>
                <p class="text-gray-300">Are you sure you want to delete this user?</p>
                <div class="flex justify-end gap-2 mt-4">
                    <button onclick="saveDeleteUser()" class="px-4 py-2 bg-red-500 text-white rounded">Yes</button>
                    <button onclick="closeDeleteUserModal()"
                        class="px-4 py-2 bg-gray-500 text-white rounded">No</button>
                </div>
            </div>
        </div>

        <!-- Confirm Edit User Modal -->
        <div id="confirmEditUserModal"
            class="modal hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
            <div class="modal-content bg-gray-900 p-6 rounded-xl shadow-2xl w-96">
                <h2 class="text-xl text-white font-semibold">Confirm Edit</h2>
                <p class="text-gray-300">Are you sure you want to save these changes?</p>
                <div class="flex justify-end gap-2 mt-4">
                    <button type="button" id="confirmEditUser"
                        class="px-4 py-2 bg-green-500 text-white rounded">Yes</button>
                    <button onclick="closeConfirmEditUserModal()"
                        class="px-4 py-2 bg-gray-500 text-white rounded">No</button>
                </div>
            </div>
        </div>

        <!-- Confirm Ban User Modal -->
        <div id="confirmBanUserModal"
            class="modal hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
            <div class="modal-content bg-gray-900 p-6 rounded-xl shadow-2xl w-96">
                <h2 class="text-xl text-white font-semibold">Confirm Ban Settings</h2>
                <p class="text-gray-300">Are you sure you want to save these ban settings?</p>
                <div class="flex justify-end gap-2 mt-4">
                    <button onclick="confirmBanUserChanges()" id="confirmBanUser" class="px-4 py-2 bg-yellow-500 text-white rounded">Yes</button>
                    <button onclick="CloseBanUserModal()" class="px-4 py-2 bg-gray-500 text-white rounded">No</button>
                </div>
            </div>
        </div>



        <script>

            let currentUsername = null;

            function openConfirmEditUserModal() {
                document.getElementById("confirmEditUserModal").style.display = "flex";
            }

            function closeConfirmEditUserModal() {
                document.getElementById("confirmEditUserModal").style.display = "none";
            }

            function openDeleteUserModal(username) {
                currentUsername = username;
                document.getElementById("confirmDeleteUserModal").style.display = "flex";
            }

            function closeDeleteUserModal() {
                document.getElementById("confirmDeleteUserModal").style.display = "none";
            }

            // function openBanUserModal() {
            //     document.getElementById("confirmBanUserModal").style.display = "flex";
            // }

            function CloseBanUserModal() {
                document.getElementById("confirmBanUserModal").style.display = "none";
            }

            function openAddUserModal() {
                document.getElementById("addUserForm").reset();
                document.getElementById("addUserModal").style.display = "flex";
            }

            function closeAddUserModal() {
                document.getElementById("addUserModal").style.display = "none";
            }

            function openEditUserModal(email, username, fullName, phone) {
                currentUsername = username;
                document.getElementById("edit_email").value = email;
                document.getElementById("edit_username").value = username;
                document.getElementById("edit_full_name").value = fullName;
                document.getElementById("edit_phone").value = phone;

                document.getElementById("editUserModal").style.display = "flex";
            }

            function closeEditUserModal() {
                document.getElementById("editUserModal").style.display = "none";
            }

            let originalBanStatuses = {}; // Store original ban values

            function collectOriginalBanStatuses() {
                originalBanStatuses = {}; // Reset in case of reloads

                document.querySelectorAll(".ban-posting, .ban-commenting").forEach(select => {
                    const username = select.dataset.username; // Now this should exist!
                    if (!username) {
                        console.warn("Missing username for select element:", select);
                        return;
                    }

                    if (!originalBanStatuses[username]) {
                        originalBanStatuses[username] = {};
                    }
                    originalBanStatuses[username][select.classList.contains("ban-posting") ? "ban_posting" : "ban_commenting"] = select.value;
                });

                console.log("Original ban statuses collected:", originalBanStatuses);
            }

            // Run this when the page loads
            document.addEventListener("DOMContentLoaded", collectOriginalBanStatuses);

            function getChangedBanStatuses(original) {
                let changedBanStatuses = {};

                document.querySelectorAll(".ban-posting, .ban-commenting").forEach(select => {
                    const username = select.dataset.username; // Now correctly referencing username
                    const type = select.classList.contains("ban-posting") ? "ban_posting" : "ban_commenting";
                    const newValue = String(select.value).trim();
                    const originalValue = String(original?.[username]?.[type] || "").trim();

                    if (newValue !== originalValue) {
                        if (!changedBanStatuses[username]) {
                            changedBanStatuses[username] = {};
                        }
                        changedBanStatuses[username][type] = newValue;
                    }
                });

                console.log("Detected Changed Ban Statuses:", changedBanStatuses);
                return changedBanStatuses;
            }

            function openBanUserModal() {
                console.log("Stored original ban statuses:", originalBanStatuses); // Debugging
                console.log("Changes: ", getChangedBanStatuses(originalBanStatuses));

                document.getElementById("confirmBanUserModal").style.display = "flex";
            }

            async function saveDeleteUser() {
                const formData = new FormData();

                formData.append("deleteUsername", currentUsername);

                try {
                    const response = await fetch(`/admin-panel/delete-user/${currentUsername}`, {
                        method: "POST",
                        body: formData,
                    });

                    if (response.ok) {
                        alert("Deleted user.");
                        location.reload(); // Refresh to show updated comment
                    } else {
                        const result = await response.json().catch(() => null);
                        if (result) {
                            alert(result?.message || "Failed to delete user.");
                        } else {
                            alert("Failed to delete user.");
                        }
                    }
                } catch (error) {
                    console.error("Error deleting user.");

                }
            };

            document.querySelector('#confirmAddUser').addEventListener('click', async (e) => {
                e.preventDefault();
                const form = document.querySelector('#addUserForm');
                const formData = new FormData(form);

                try {
                    const response = await fetch(form.action, {
                        method: form.method,
                        body: formData
                    });

                    const result = await response.json();

                    if (response.ok) {
                        alert("User added successfully!");
                        location.reload();
                    } else {
                        const message = Array.isArray(result.message) ? result.message.join("\n") : result.message;
                        alert(message || "Failed to register user.");
                    }
                } catch (error) {
                    alert("An unexpected error occurred. Please try again.");

                }
            });

            async function saveEditedUser() {
                const email = document.getElementById("edit_email").value.trim();
                const username = document.getElementById("edit_username").value.trim();
                const fullName = document.getElementById("edit_full_name").value.trim();
                const phone = document.getElementById("edit_phone").value.trim();

                const formData = new FormData();
                formData.append("currentUsername", currentUsername); // The old username before editing
                formData.append("email", email);
                formData.append("username", username);
                formData.append("full_name", fullName);
                formData.append("phone", phone);

                try {
                    const response = await fetch(`/admin-panel/edit-user`, {
                        method: "POST",
                        body: formData,
                    });

                    const result = await response.json();

                    if (response.ok) {
                        alert("User details updated successfully!");
                        location.reload(); // Refresh the page to show the changes
                    } else {
                        alert(result.message || "Failed to update user.");
                    }
                } catch (error) {
                    console.error("Error updating user:", error);
                    alert("An error occurred while updating the user.");
                }
            }

            async function confirmBanUserChanges() {
                const changedBanStatuses = getChangedBanStatuses(originalBanStatuses);

                if (Object.keys(changedBanStatuses).length === 0) {
                    alert("No changes detected.");
                    return;
                }

                const formData = new FormData();
                formData.append("changedBanStatuses", JSON.stringify(changedBanStatuses)); // Convert to JSON string

                try {
                    const response = await fetch("/admin-panel/ban-user", {
                        method: "POST",
                        body: formData,
                    });

                    const result = await response.json();

                    if (response.ok) {
                        alert("Ban statuses updated successfully.");
                        location.reload(); // Refresh to reflect changes
                    } else {
                        alert(`Failed: ${result.message}`);
                    }
                } catch (error) {
                    console.error("Error updating ban statuses:", error);
                    alert("An error occurred while updating ban statuses.");
                }
            }





        </script>
</body>

</html>